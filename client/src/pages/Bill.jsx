
import React, { useRef, useEffect } from "react";
import jsPDF from "jspdf";
import html2canvas from "html2canvas-oklch";
import { useLocation } from "react-router-dom";

const Bill = () => {
    const { state } = useLocation();
    const booking = state?.booking; //booking ghet ahe 
    const billRef = useRef();

    // Marathi font load (for Mangal)
    useEffect(() => {
        const mangalFont = new FontFace(
            "Mangal",
            "url(https://fonts.gstatic.com/ea/mangal/v2/Mangal-Regular.woff2)"
        );
        mangalFont.load().then(function (loadedFont) {
            document.fonts.add(loadedFont);
        });
    }, []);

    const generatePDF = async () => {
        const input = billRef.current;

        // Download ‡§¨‡§ü‡§£ hide ‡§ï‡§∞‡§§‡§æ‡§®‡§æ
        const downloadBtn = input.querySelector("#downloadBtn");
        if (downloadBtn) downloadBtn.style.display = "none";

        // Capture high-quality image
        const canvas = await html2canvas(input, {
            scale: 2,
            useCORS: true,
            windowWidth: input.scrollWidth,
            windowHeight: input.scrollHeight,
        });
        const imgData = canvas.toDataURL("image/png");

        const pdf = new jsPDF("p", "mm", "a4");
        const pdfWidth = pdf.internal.pageSize.getWidth();
        const pdfHeight = pdf.internal.pageSize.getHeight();

        const imgWidth = pdfWidth;
        const imgHeight = (canvas.height * pdfWidth) / canvas.width;

        let heightLeft = imgHeight;
        let position = 0;

        // ‡§™‡§π‡§ø‡§≤‡§æ page add ‡§ï‡§∞‡§æ
        pdf.addImage(imgData, "PNG", 0, position, imgWidth, imgHeight);
        heightLeft -= pdfHeight;

        // ‡§¨‡§æ‡§ï‡•Ä‡§ö‡§æ content ‡§Ö‡§∏‡•á‡§≤ ‡§§‡§∞ ‡§™‡•Å‡§¢‡§ö‡•á pages
        while (heightLeft > 0) {
            position = position - pdfHeight;
            pdf.addPage();
            pdf.addImage(imgData, "PNG", 0, position, imgWidth, imgHeight);
            heightLeft -= pdfHeight;
        }

        pdf.save(`${booking?.name || "Bill"}.pdf`);

        // ‡§™‡•Å‡§®‡•ç‡§π‡§æ download ‡§¨‡§ü‡§£ ‡§¶‡§æ‡§ñ‡§µ
        if (downloadBtn) downloadBtn.style.display = "block"
    };

    if (!booking) {
        return (
            <div className="flex justify-center items-center min-h-screen text-red-600 text-lg font-semibold">
                ‚ö†Ô∏è ‡§ï‡•ã‡§£‡§§‡•Ä‡§π‡•Ä ‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä ‡§®‡§æ‡§π‡•Ä
            </div>
        );
    }

    return (
        <div className="pt-25 pb-6 bg-gray-100 min-h-screen flex flex-col items-center">
            <div
                ref={billRef}
                className="bg-white p-6 w-full max-w-3xl shadow-lg rounded-md font-sans"
                style={{ fontFamily: "Mangal, Arial, sans-serif" }}
            >
                {/* Header */}
                <h2 className="text-3xl font-bold mb-1 text-indigo-600 text-center">
                    üå∏ ‡§ü‡•á‡§ï ‡§∏‡•Ç‡§∞‡•ç‡§Ø‡§æ üå∏
                </h2>
                <p className="text-gray-700 text-center ">
                    ‡§™‡§§‡•ç‡§§‡§æ: ‡§µ‡§∏‡§Ç‡§§ ‡§µ‡§ø‡§π‡§æ‡§∞, ‡§∞‡§æ. ‡§¨‡§≥‡§µ‡§Ç‡§§ ‡§®‡§ó‡§∞
                </p>
                <p className="text-gray-700 text-center ms-5 mb-4">‡§´‡•ã‡§®: 2541256321</p>

                {/* Customer & Invoice Details */}
                <div className="flex justify-between mb-6 flex-wrap">
                    <div className="w-full sm:w-1/2 mb-4 sm:mb-0">
                        <p className="font-semibold mb-1 text-indigo-600">‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä:</p>
                        <p>‡§®‡§æ‡§Æ: {booking.name}</p>
                        <p>‡§´‡•ã‡§® 1: {booking.phone1}</p>
                        {booking.phone2 && <p>‡§´‡•ã‡§® 2: {booking.phone2}</p>}
                        <p>‡§™‡§§‡•ç‡§§‡§æ: {booking.address}</p>
                    </div>
                    <div className="w-full sm:w-1/2">
                        <p className="font-semibold mb-1 text-indigo-600">‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä:</p>
                        <p>‡§†‡§ø‡§ï‡§æ‡§£: {booking.location}</p>
                        <p>‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞: {booking.eventType}</p>
                        <p>‡§™‡•Ö‡§ï‡•á‡§ú: {booking.package}</p>
                        <p>
                            ‡§§‡§æ‡§∞‡•Ä‡§ñ:{" "}
                            {new Date(booking.startDate).toLocaleDateString("mr-IN")} ‡§§‡•á{" "}
                            {new Date(booking.endDate).toLocaleDateString("mr-IN")}
                        </p>
                    </div>
                </div>

                {/* Catering & Gate Items */}
                <div className="mb-6">
                    <h4 className="font-semibold mb-2 text-indigo-600">‡§ï‡•á‡§ü‡§∞‡§ø‡§Ç‡§ó ‡§Ü‡§Ø‡§ü‡§Æ‡•ç‡§∏</h4>
                    {booking.cateringItems?.length > 0 ? (
                        <table className="w-full border border-gray-300 border-collapse text-sm">
                            <thead className="bg-gray-100">
                                <tr>
                                    <th className="border px-2 py-1 text-left">‡§ï‡•ç‡§∞.</th>
                                    <th className="border px-2 py-1 text-left">‡§Ü‡§Ø‡§ü‡§Æ</th>
                                </tr>
                            </thead>
                            <tbody>
                                {booking.cateringItems.map((item, index) => (
                                    <tr key={index} className="hover:bg-gray-50">
                                        <td className="border px-2 py-1">{index + 1}</td>
                                        <td className="border px-2 py-1">{item.name}</td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    ) : (
                        <p className="text-gray-600">‚ùå ‡§ï‡•á‡§ü‡§∞‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§®‡§æ‡§π‡•Ä</p>
                    )}
                </div>

                <div className="mb-6">
                    <h4 className="font-semibold mb-2 text-indigo-600">‡§ó‡•á‡§ü ‡§™‡•Ö‡§ï‡•á‡§ú ‡§Ü‡§Ø‡§ü‡§Æ‡•ç‡§∏</h4>
                    {booking.gatePackageItems?.length > 0 ? (
                        <table className="w-full border border-gray-300 border-collapse text-sm">
                            <thead className="bg-gray-100">
                                <tr>
                                    <th className="border px-2 py-1 text-left">‡§ï‡•ç‡§∞.</th>
                                    <th className="border px-2 py-1 text-left">‡§Ü‡§Ø‡§ü‡§Æ</th>
                                    <th className="border px-2 py-1 text-left">‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ</th>
                                </tr>
                            </thead>
                            <tbody>
                                {booking.gatePackageItems.map((item, index) => (
                                    <tr key={index} className="hover:bg-gray-50">
                                        <td className="border px-2 py-1">{index + 1}</td>
                                        <td className="border px-2 py-1">{item.name}</td>
                                        <td className="border px-2 py-1">{item.quantity}</td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    ) : (
                        <p className="text-gray-600">‚ùå ‡§ó‡•á‡§ü ‡§™‡•Ö‡§ï‡•á‡§ú ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§®‡§æ‡§π‡•Ä</p>
                    )}
                </div>

                {/* Total Summary */}
                <div className="mb-6">
                    <p className="font-semibold mb-1 text-indigo-600">‡§ï‡§ø‡§Æ‡§§ ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂:</p>
                    <p>‡§è‡§ï‡•Ç‡§£ ‡§∞‡§ï‡•ç‡§ï‡§Æ: ‚Çπ{booking.totalRs}</p>
                    <p>‡§∏‡§µ‡§≤‡§§: ‚Çπ{booking.discount}</p>
                    <p>‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§ï‡§ø‡§Ç‡§Æ‡§§: ‚Çπ{booking.finalPrice}</p>
                    <p>‡§Ö‚Äç‡•Ö‡§°‡§µ‡•ç‡§π‡§æ‡§®‡•ç‡§∏: ‚Çπ{booking.advancePayment}</p>
                    <p>‡§â‡§∞‡•ç‡§µ‡§∞‡•Ä‡§§ ‡§∞‡§ï‡•ç‡§ï‡§Æ: ‚Çπ{booking.balance}</p>
                    <p>‡§ö‡•á‡§ï ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï: {booking.chequeRequired}</p>
                </div>

                {/* Notes */}
                {booking.notes && (
                    <div className="mb-6">
                        <p className="font-semibold mb-1 text-indigo-600">‡§ü‡§ø‡§™‡•ç‡§™‡§£‡•Ä:</p>
                        <p className="text-gray-700 whitespace-pre-wrap">{booking.notes}</p>
                    </div>
                )}

                <p className="text-center mt-8 font-semibold text-gray-700">
                    ‡§ü‡•á‡§ï ‡§∏‡•Ç‡§∞‡•ç‡§Ø‡§æ - ‡§´‡•ã‡§®: 9621345050
                </p>

                <button
                    id="downloadBtn"
                    onClick={generatePDF}
                    className="mt-6 ms-68 bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-md shadow font-semibold"
                >
                    Download PDF
                </button>
            </div>


        </div>
    );
};

export default Bill;







