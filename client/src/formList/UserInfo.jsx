import { useFormik } from 'formik';
import React from 'react';
import * as yup from "yup";
import clsx from 'clsx';

const UserInfo = () => {
    const formik = useFormik({
        initialValues: {
            name: "",
            phone1: "",
            phone2: "",
            address: "",
        },
        validationSchema: yup.object({
            name: yup.string().required("‡§ó‡•ç‡§∞‡§æ‡§π‡§ï‡§æ‡§ö‡•á ‡§®‡§æ‡§µ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§Ü‡§π‡•á"),
            phone1: yup
                .string()
                .required("‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§Ü‡§π‡•á")
                .matches(/^\d{10}$/, "10 ‡§Ö‡§Ç‡§ï‡•Ä ‡§®‡§Ç‡§¨‡§∞ ‡§ü‡§æ‡§ï‡§æ"),
            phone2: yup
                .string()
                .nullable()
                .matches(/^\d{10}$/, "10 ‡§Ö‡§Ç‡§ï‡•Ä ‡§®‡§Ç‡§¨‡§∞ ‡§ü‡§æ‡§ï‡§æ")
                .notRequired(),
            address: yup.string().required("‡§™‡§§‡•ç‡§§‡§æ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§Ü‡§π‡•á"),
        }),
        onSubmit: (values, { resetForm }) => {
            resetForm()
        }
    });

    const handleClass = (field) =>
        clsx("input input-bordered w-[96%] bg-blue-50", {
            "border-red-500": formik.touched[field] && formik.errors[field],
            "border-green-500": formik.touched[field] && !formik.errors[field],
        });

    return (
        <div className='w-[320%] '>
            {/* üü¢ Title - ‡§Æ‡§ß‡•ç‡§Ø‡§≠‡§æ‡§ó‡•Ä ‡§Ü‡§£‡§ø ‡§Æ‡§∞‡§æ‡§†‡•Ä ‡§´‡•â‡§®‡•ç‡§ü */}
            <h2 className="text-2xl font-bold mb-6 text-center text-gray-800 font-marathi">
                ‡§ó‡•ç‡§∞‡§æ‡§π‡§ï‡§æ‡§ö‡•Ä ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä
            </h2>

            {/* ‚úÖ ‡§è‡§ï‡§æ row ‡§Æ‡§ß‡•ç‡§Ø‡•á 3 input */}
            <div className="flex flex-row gap-4 w-full">
                {/* ‡§®‡§æ‡§µ */}
                <div className="flex flex-col w-1/3 min-w-[250px]">
                    <label className="font-semibold mb-1 block">* ‡§ó‡•ç‡§∞‡§æ‡§π‡§ï‡§æ‡§ö‡•á ‡§®‡§æ‡§µ</label>
                    <input
                        type="text"
                        placeholder="‡§ó‡•ç‡§∞‡§æ‡§π‡§ï‡§æ‡§ö‡•á ‡§®‡§æ‡§µ"
                        className={handleClass("name")}
                        {...formik.getFieldProps("name")}
                        aria-invalid={formik.touched.name && formik.errors.name ? "true" : undefined}
                        aria-describedby="name-error"
                    />
                    {formik.touched.name && formik.errors.name && (
                        <p className="text-red-600 text-sm mt-1" id="name-error" role="alert">
                            {formik.errors.name}
                        </p>
                    )}
                </div>

                {/* ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ 1 */}
                <div className="flex flex-col w-1/3 min-w-[250px]">
                    <label className="font-semibold mb-1 block">* ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ 1</label>
                    <input
                        type="tel"
                        placeholder="10 ‡§Ö‡§Ç‡§ï‡•Ä ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞"
                        className={handleClass("phone1")}
                        {...formik.getFieldProps("phone1")}
                        maxLength={10}
                        aria-invalid={formik.touched.phone1 && formik.errors.phone1 ? "true" : undefined}
                        aria-describedby="phone1-error"
                    />
                    {formik.touched.phone1 && formik.errors.phone1 && (
                        <p className="text-red-600 text-sm mt-1" id="phone1-error" role="alert">
                            {formik.errors.phone1}
                        </p>
                    )}
                </div>

                {/* ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ 2 */}
                <div className="flex flex-col w-1/3 min-w-[250px]">
                    <label className="font-semibold mb-1 block">‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ 2 (‡§ê‡§ö‡•ç‡§õ‡§ø‡§ï)</label>
                    <input
                        type="tel"
                        placeholder="10 ‡§Ö‡§Ç‡§ï‡•Ä ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞"
                        className={handleClass("phone2")}
                        {...formik.getFieldProps("phone2")}
                        maxLength={10}
                        aria-invalid={formik.touched.phone2 && formik.errors.phone2 ? "true" : undefined}
                        aria-describedby="phone2-error"
                    />
                    {formik.touched.phone2 && formik.errors.phone2 && (
                        <p className="text-red-600 text-sm mt-1" id="phone2-error" role="alert">
                            {formik.errors.phone2}
                        </p>
                    )}
                </div>
            </div>

            {/* ‡§™‡§§‡•ç‡§§‡§æ */}
            <div className="md:col-span-2 mt-4">
                <label className="font-semibold mb-1 block">* ‡§ó‡•ç‡§∞‡§æ‡§π‡§ï‡§æ‡§ö‡§æ ‡§™‡§§‡•ç‡§§‡§æ</label>
                <textarea
                    rows={2}
                    placeholder="‡§ó‡•ç‡§∞‡§æ‡§π‡§ï‡§æ‡§ö‡§æ ‡§™‡§§‡•ç‡§§‡§æ"
                    className={handleClass("address")}
                    {...formik.getFieldProps("address")}
                    aria-invalid={formik.touched.address && formik.errors.address ? "true" : undefined}
                    aria-describedby="address-error"
                />
                {formik.touched.address && formik.errors.address && (
                    <p className="text-red-600 text-sm mt-1" id="address-error" role="alert">
                        {formik.errors.address}
                    </p>
                )}
            </div>
        </div>
    );
};

export default UserInfo;
